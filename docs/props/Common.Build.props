<!-- Referencia: https://docs.microsoft.com/es-es/visualstudio/msbuild/common-msbuild-project-properties?view=vs-2019  -->

<Project>
  <PropertyGroup>
    <IsTestsProject>$(MSBuildProjectName.Contains('Tests'))</IsTestsProject>
    <TargetFramework>net5.0</TargetFramework>
    <Nullable>enable</Nullable>
    <LangVersion>latest</LangVersion>
    <NeutralLanguage>en-US</NeutralLanguage>
  </PropertyGroup>

  <!-- Muestra en la consola de errores, las advertencias como error en la compilación -->
  <Choose>
    <When Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
      <PropertyGroup>
        <MSBuildTreatWarningsAsErrors>false</MSBuildTreatWarningsAsErrors>
        <TreatWarningsAsErrors>false</TreatWarningsAsErrors>
      </PropertyGroup>
    </When>
    <When Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
      <PropertyGroup>
        <MSBuildTreatWarningsAsErrors>true</MSBuildTreatWarningsAsErrors>
        <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
      </PropertyGroup>
    </When>
    <Otherwise>
      <PropertyGroup>
        <ConfigurationErrorMsg>Falta configurar la variable [$(Configuration)] o [$(Platform)] en su solución.</ConfigurationErrorMsg>
      </PropertyGroup>
    </Otherwise>
  </Choose>

  <!-- Optimize 
    
    - DebugSymbols (bool): Habilita/desabilita la creación de archivos de símbolos pbd. 
    
    - DebugType (full | pdbonly | portable | embedded | none): Define el nivel de información de depuración que desea generar. 
    
    - Optimize (bool): Permite la optimización del compilador. 
    
    - DefineConstants: Permite definir constantes condicionales para el compilador. Ej:
      
      <PropertyGroup Condition="$([System.Text.RegularExpressions.Regex]::IsMatch('$(TargetFramework)', '^net\d'))">
        <DefineConstants>NETFRAMEWORK</DefineConstants>
      </PropertyGroup>
      <PropertyGroup Condition="$([System.Text.RegularExpressions.Regex]::IsMatch('$(TargetFramework)', '^netstandard\d'))">
        <DefineConstants>NETSTANDARD</DefineConstants>
      </PropertyGroup>
      <PropertyGroup Condition="$([System.Text.RegularExpressions.Regex]::IsMatch('$(TargetFramework)', '^netcoreapp\d'))">
        <DefineConstants>NETCORE</DefineConstants>
      </PropertyGroup>
      
      #if NETFRAMEWORK
          FrameworkSpecific();
      #endif

      #if NETSTANDARD
          StandardSpecific();
      #endif

      #if NETCORE
          CoreSpecific();
      #endif
    
    -->
  <Choose>
    <When Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
      <PropertyGroup>
        <DebugSymbols>true</DebugSymbols>
        <DebugType>full</DebugType>
        <Optimize>false</Optimize>
        <DefineConstants>DEBUG;TRACE</DefineConstants>
      </PropertyGroup>
    </When>
    <When Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
      <PropertyGroup>
        <DebugSymbols>false</DebugSymbols>
        <DebugType>none</DebugType>
        <Optimize>true</Optimize>
        <DefineConstants>TRACE</DefineConstants>
      </PropertyGroup>
    </When>
    <Otherwise>
      <PropertyGroup>
        <ConfigurationErrorMsg>Falta configurar la variable [$(Configuration)] o [$(Platform)] en su solución.</ConfigurationErrorMsg>
      </PropertyGroup>
    </Otherwise>
  </Choose>

  <!-- Analyzers -->
  <Choose>
    <When Condition=" '$(IsTestsProject)' == 'false' ">
      <PropertyGroup>
        <RunAnalyzersDuringBuild>true</RunAnalyzersDuringBuild>
        <RunAnalyzersDuringLiveAnalysis>true</RunAnalyzersDuringLiveAnalysis>
        <CodeAnalysisRuleSet>$(SolutionDir)docs\analyzers\stylecop.ruleset</CodeAnalysisRuleSet>
      </PropertyGroup>

      <ItemGroup>
        <PackageReference Include="Microsoft.VisualStudio.Threading.Analyzers" Version="16.10.56" PrivateAssets="All" />
        <PackageReference Include="StyleCop.Analyzers" Version="1.1.118" IncludeAssets="Analyzers;Build" PrivateAssets="All" />
        <AdditionalFiles Include="$(SolutionDir)docs\analyzers\stylecop.json" Visible="false" />
      </ItemGroup>
    </When>
    <!--
    <Otherwise>
      <PropertyGroup>
        <CodeAnalysisRuleSet>MinimumRecommendedRules.ruleset</CodeAnalysisRuleSet>
      </PropertyGroup>
    </Otherwise>
     -->
  </Choose>

  <!-- Documentation -->
  <PropertyGroup Condition=" '$(IsTestsProject)' == 'false' ">
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
  </PropertyGroup>

  <!-- SignAssembly -->
  <PropertyGroup Condition=" '$(IsTestsProject)' == 'false' ">
    <SignAssembly>true</SignAssembly>
    <DelaySign>false</DelaySign>
    <AssemblyOriginatorKeyFile>$(SolutionDir)docs\signassembly\SignStrong.snk</AssemblyOriginatorKeyFile>
  </PropertyGroup>

  <!-- MSTest -->
  <PropertyGroup>
    <RunSettingsFilePath>$(SolutionDir)docs\props\tests.runsettings</RunSettingsFilePath>
  </PropertyGroup>

</Project>